yet simple toolset to use facebooks graph api with django

tested apps:
- authentication backend (to use with django.contrib.auth)
- registration backend wrapper (to use with django-registration)

please read the code. we will update documentation soon.


Graph helper tools:
==============================

 * add 'facebook' to your INSTALLED_APPS. This will create django classes for the main facebook models.
 * add 'SignedRequestMiddleware' to your settings.MIDDLEWARE.
 * optionally add 'AppRequestMiddleware' if you need to deal with app requests.
 * add url(r'^facebook/', include('facebook.urls')), to your urls.py.
 * create an app settings dict as described in utils.py for each of your apps. I recommend using a different settings file for local development.
 * for client side utilities add fb_utils to your html template and follow the instructions in the comments section.

Now you can generate a graph instance with the following command::

    from facebook.utils import get_graph    
    graph = get_graph(request)
    
To make a graph request to facebook simply use graph.request. I.e. to get a certain message object::

    fb_message = graph.request('%s' % post_id)

You can also create facebook user objects like so::

    from facebook.models import User
    user = User(id=graph.me['id'])
    user.get_from_facebook(graph=graph, save=True)

The app stores as much data as possible in the session to minimize requests to Facebook. You can access the session class directly 
to get informations about the current user::

    from facebook.utils import FBSession    
    fb = FBSession(request)
    signed_request = fb.signed_request



Facebook Models
===============

The facebook app adds the models: Users, Events, Pages, Photos, Posts and Requests to the admin interface. Django can fetch the
data from facebook on save and store it locally. It is not yet possible to create a model this way and upload it to facebook except for Photos.
There is a login button so you can access private data as well. 



Simple usage of Facebook Auth:
==============================

 * add 'facebook' to your INSTALLED_APPS. it will create a table where to store all connected facebook users.
 * add 'facebook.backends.authentication.AuthenticationBackend' to AUTHENTICATION_BACKENDS
 * add url(r'^accounts/', include('facebook.backends.registration.urls')) to your urls
 * now you can insert the facebook button: <fb:login-button perms="email" onlogin="window.location.href='{% url auth_login %}?next={{ request.get_full_path }}'"></fb:login-button> 


Client side utilities:
======================

 * FQ Facebook queue that gets executed when the user login status is clear. Use FQ.add(function(){...});
 * fb object that contains the user details and permissions.
 * async init method with channel URL. Some fixes for IE.
 * a log function that can record client side responses back to the server.

